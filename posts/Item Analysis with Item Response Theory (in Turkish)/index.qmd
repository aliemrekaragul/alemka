---
title: "Item Analysis with Item Response Theory (in Turkish)"
description: |
  Madde Tepki Kuramı temelli madde analizi. Hem çok kategorili hem de iki kategorili maddeler için MTK temelli madde analizi uygulama süreçleri...
author:
  - name: Ali Emre Karagül
    orcid: 0000-0002-5820-8643
    email: aliemrekaragul@gmail.com
    affiliations:
      - name: TOBB ETU- University of Economics & Technology
date: 2021-11-20
categories: [psychometrics, IRT]
image: "mtk.png"
execute:
  freeze: auto  # re-render only when source changes
---

## GİRİŞ

Bu çalışmada çok kategorili puanlanan maddelerden elde edilen bir veri seti kullanılmıştır. Çalışmanın ilk kısmında çok kategorili maddelere yönelik MTK analizleri yürütülmüştür. Daha sonra aynı veri seti iki kategorili verilere dönüştürülmüştür. Yine MTK süreçleri bu sefer de iki kategorili maddeler için yürütülmüştür. İzlenen adımlar şu şekildedir:

**1. Çoklu puanlanan maddelere yönelik olarak;**

-   Uygun MTK modeli nedir?
-   Bu modele göre madde ve test parametreleri nasıldır?
-   İdeal ve sorunlu madde örnekleri nasıldır?
-   Test bilgi fonksiyonunu nasıldır?
-   Birey yetenek puanlarının dağılımı nasıldır?

**2. Her bir maddeyi, kendi madde ortalamasından keserek 1-0 verisine dönüştürünüz. Buna göre iki kategorili puanlanan maddelere yönelik olarak;**

-   Uygun MTK modeli nedir?
-   Bu modele göre madde ve test parametreleri nasıldır?
-   İdeal ve sorunlu madde örnekleri nasıldır?
-   Test bilgi fonksiyonunu nasıldır?
-   Birey yetenek puanlarının dağılımı nasıldır?

### **Preprocessing**

Kullanılan paketleri listeleyelim:

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
library(psych)
library(GPArotation)
library(sirt)
library(ltm)
```

Tabi ki işe öncelikle verinin working directory'den yüklenmesi ve ön düzenleme süreçleri ile başladık:

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
data1<- read.csv2("sampledata.csv")
str(data1) #yapısını incelemek için.
```

Veri setinde ilk sütunun sıra sayıları olduğunu görünce aman tanrım dedik ve sildik.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
data1<-data1[,-1] # fazla kalabalığa gerek yok, aynı isimle devam.
```

Kayıp veri olup olmadığını anlamak için:

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
data1[data1 == 0] <- NA
sum(is.na(data1))
```

Neredeyse %8 oranında missing value var. Too much! Alayını atıyoruz. Artık adını da değiştirelim.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
data2<- na.omit(data1)
```

Madem ki öylesine bir veri seti ile öylesine bir analiz yapıyoruz ve practical kaygılarımız yok, veri setimizi büyütelim. 1000 kişi olsun:

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
set.seed(16611106)  # olur da sen de denemek istersen diye aynı veri setini üretmemizi sağlar.
data3 <- data2[sample(1:495, 1000, replace = T), ] #adını da değiştirelim 
```

Son olarak, veri setinde işimize yaramayacak bir sürü demografik detay var. Atıyoruz:

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
row.names(data3)<- NULL #önce adlarını silelim.

data4<- data3[,5:24]  #5. sütundan sonrası çöp  
```

Çalışmanın birinci araştırma sorusu kapsamında "data4" adlı veri seti kullanılmıştır. Bu veri seti 1000 gözlemden ve 20 değişkenden oluşmaktadır. Değişkenler, 1 ile 5 arasında bir tam sayı değeri almaktadır. Çalışmanın ikinci araştırma sorusu kapsamında ise her bir madde kendi madde ortalamasından kesilerek iki kategorili veriye dönüştürülmüştür. Bu aşamalar ilgili başlık altında raporlaştırılmıştır. Ön düzenlemelerin ardından araştırma sorularına cevap aramak için ileri analizlere devam edilmiştir.

## **1. Çok Boyutlu Maddelere Yönelik Aşamalar**

Çalışmanın ilk araştırma sorusu kapsamında, yapılan analizler çok kategorili puanlanan maddeler üzerinden yürütülmüştür.

### **1.a. Varsayımların kontrolü ve uygun MTK modelinin belirlenmesi**

Çok kategorili puanlanan maddelerden oluşan ölçeğin Madde Tepki Kuramı çerçevesinde incelenmesi sürecinde öncelikle uygun MTK modelinin belirlenebilmesi için varsayım kontrolleri yapılmıştır. Bu bağlamda, tek boyutluluk ve yerel bağımsızlık varsayımları ile model-veri uyumu kontrol edilmiştir. Tek boyutluluk varsayımı kontrolü için paralel analiz, yamaç birikinti grafiği ve faktör analizi kullanılmıştır. Bu aşamada kullanılan paketler: *Psych* ve *GPArotation.*

Paralel Analizden elde edilen yamaç birikinti grafiği şöyledir:

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
fa.parallel(data4, n.obs = 1000, cor = "poly")
```

Yamaç birikinti grafiği iki bileşenli bir yapıyı göstermektedir.  Son olarak faktör analizi yardımı ile hem tek hem de iki bileşenli modeller oluşturulmuştur:

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
fa_model1 <- fa.poly(data4)
fa_model2 <- fa(data4, nfactors = 2, cor="poly")
```

Bu iki modelin burada çıktılarını alsak baya uzun oluyor. Ama özetle; ben beğendiğim ve devam analizi için seçtiğim 2 faktörlü model ile devam ediyorum. Bu modelin çıktıları incelendiğinde, 1-12 numaralı maddelerin bir boyutta, 13-20 numaralı maddelerin ise diğer bir boyutta yüklendiği görülmektedir. Bu nedenle veri seti aşağıdaki adımlar izlenerek ikiye bölünmüş ve ileri analizler her iki faktör için de ayrı ayrı yürütülmüştür.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
data4a<-data4[1:12]
data4b<-data4[13:20]

```

Yerel bağımsızlık varsayımının kontrolü için Yen'in Q analizi (Yen, 1984) her iki bileşen için de uygulanmıştır. Bu süreçte sirt paketinden (Robitzsch, 2020) yararlanılmış ve aşağıdaki adımlar izlenmiştir.  

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

    Mod1 <- TAM::tam.mml( resp=data4a )
    Mod1.wle <- TAM::tam.wle(Mod1)
    Mod1.q3 <- sirt::Q3( dat=data4a, theta=Mod1.wle$theta, b=Mod1$item_irt[[3]] )
    Mod2 <- TAM::tam.mml( resp=data4b )
    Mod2.wle <- TAM::tam.wle(Mod2)
    Mod2.q3 <- sirt::Q3( dat=data4b, theta=Mod2.wle$theta, b=Mod2$item_irt[[3]] )

Bu üstteki kodun çıktısı çooook uzun. Buraya koymuyorum. Tabi biz veriyi bootstrap ile çoğalttığımız için bu varsayım karşılanmadı ama gerçek veri ile çalışsaydık bu varsayımın karşılanmaması durumunda çöp olacaktı analiz. Yani örneklem yetersiz, daha çok örneklem lazım diyecektik. Ya da modeli veya madde sayılarını inceleyecektik vs. vs.

Birinci araştırma sorusunun son aşamasında ise model veri uyumunun incelenmesi ve en uygun modelin seçilmesi yer almaktadır. Model-veri uyumu incelemesi ltm paketi (Rizopoulos, 2006) yardımı ile her iki bileşen için de ayrı ayrı GRM modeli ile yürütülmüştür. Her iki bileşende de model-1, ayırt edicilik düzeylerinin her madde için farklılaştığı modeli betimlemektedir. Model-2 ise ayırt edicilik düzeylerinin her madde için eşit tutulduğu modeldir.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
model1_d4a<- grm(data4a)
model2_d4a<- grm(data4a, constrained = TRUE)
model1_d4b<- grm(data4b)
model2_d4b<- grm(data4b, constrained = TRUE)
anova(model2_d4a, model1_d4a)
anova(model2_d4b, model1_d4b)

```

Modeller arasında manidar farklılık anlamına gelen p değerlerine (\<.05) sahip olmasının yanı sıra, Akaike ve Bayesian bilgi kriter değerleri en düşük olan modellerin her iki bileşen için de model-1 olduğu görülmektedir. Bu nedenle model-1 ile daha iyi bir model-veri uyumu sağlanmaktadır. Devam analizleri her iki bileşen için de model-1 ile yürütülmüştür.

### 1.b. Madde parametreleri

Model-veri uyumu sınandıktan ve en uygun model belirlendikten sonra, madde parametrelerinin incelenmesi aşamasına geçilmiştir. Model-1 üzerinden aşağıdaki kod satırları kullanılarak elde edilen madde parametreleri görülebilir.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
coef(model1_d4a)
coef(model1_d4b)
```

Tablo 4 incelendiğinde, her madde için eşik parametrelerinin beklendik bir şekilde birinciden dördüncüye doğru arttığı görülmektedir. Bazı maddelerin birinci eşik parametresinin -1'den daha büyük bir değerle başladığı dikkat çekmektedir. Örneğin ikinci bileşene ait ilk madde olan 13. Maddenin ilk kategorisini seçen bir bireyin yetenek seviyesi %50 ihtimalle -.66'dan daha düşüktür. 

### 1.c. Örnek Madde Karakteristik Eğrileri

Çalışmanın bu aşamasında madde karakteristik eğrisi ideal ve sorunlu olan birer madde incelenmiş ve yorumlanmıştır. Bu nedenle, öncelikle birinci bileşeni oluşturan tüm maddelerin madde karakteristik eğrileri `plot()` fonksiyonu ile oluşturulmuştur. İdeal bir madde karakteristik eğrisine sahip olduğu düşünülen sekizinci madde ve kısmi sorunlu olduğu düşünülen ikinci maddenin madde karakteristik eğrileri aşağıdaki kod satırları yürütülerek oluşturulmuştur.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
plot(model1_d4a, type="ICC",item=6, xlab= "YETENEK", cex.main = 1, main = "MADDE KARAKTERİSTİK EĞRİSİ- Madde: 6", ylab = "OLASILIK" , lwd= 2, col.main= "red", font.axis= 3, font.lab=2)

plot(model1_d4a, type="ICC",xlab= "YETENEK", cex.main = 1, ylab = "OLASILIK" , lwd= 2, col.main= "red", font.axis= 3, font.lab=2, main = "MADDE KARAKTERİSTİK EĞRİSİ- Madde: 2", items = 2)
```

Görülen ilk grafik diğer maddelere göre daha ideal dağılım gösteren bir maddeye aittir. Bu maddenin eğrileri tüm yetenek düzeylerini kapsayacak şekilde sivrilip dağılmaktadır. Örneğin, sıfır yetenek düzeyinde bir bireyin üçüncü kategoride yer alma olasılığı en yüksek düzeydedir. Benzer şekillerde diğer kategorilerin de yüksek olasılık ile temsil ettikleri yetenek düzeyleri belirgin bir şekilde görülmektedir. Bu durumda bu maddenin ayırt edicilik düzeyinin yüksek olması beklenir. Madde parametreleri çıktısında da görüleceği üzere, bu maddeye ait ayırt edicilik parametresi birinci bileşenin en yüksek ayırt edicilik düzeyidir.

İkinci grafik ise kısmen problemli olduğu düşünülen bir grafiktir. Bu grafiğin daha iyi yorumlanabilmesi için, eksenlerinde yer alan değerler axis() fonksiyonu ile daha detaylı hale getirilmiştir. Ayrıca abline() fonksiyonu ile 0.6 yetenek düzeyine dikey bir çizgi eklenmiştir.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
plot(model1_d4a, type="ICC",
     xlab= "YETENEK", 
     cex.main = 1, 
     ylab = "OLASILIK" , 
     lwd= 2, col.main= "red", 
     font.axis= 3, 
     font.lab=2, 
     main = "MADDE KARAKTERİSTİK EĞRİSİ- Madde: 2", 
     items = 2)
axis(2, at = seq(0, 1, by = .1))
axis(1, at = seq(-4, 4, by = .1))
abline(v=.6)

```

Maddenin eğrileri incelendiğinde, 0.6 yetenek düzeyinde bir bireyin ikinci, üçüncü ve dördüncü kategorileri seçme olasılıklarının birbirlerine çok yakın olduğu görülmektedir. Bu durum, maddenin ayırt ediciliğini olumsuz olarak etkilemektedir. Daha önceki çıktılardan bilindiği üzere bu maddeye ait ayırt edicilik parametresi birinci bileşenin en düşük ayırt edicilik düzeyidir. Ayrıca, bu maddenin üçüncü kategorisinin sivrilmediği de dikkat çekmektedir. Bu durumda bu maddenin üçüncü kategorisinin çıkarılarak dört kategorili bir maddeye dönüştürülmesi düşünülebilir. Bir başka seçenek ise bu maddenin ölçekten çıkarılması ve analizlerin yeniden yapılması olabilir. 

### 1.d. Test Bilgi Fonksiyonu

Her iki bileşen için de test bilgi fonksiyonları aşağıdaki kod satırları kullanılarak elde edilmiştir:

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
plot(model1_d4a, type="IIC", items = 0, xlab= "YETENEK", cex.main = 1, main = "TEST   BİLGİ   FONKSİYONU", ylab = "BİLGİ" , lwd= 2, col.main= "red", col="blue", font.axis= 3, font.lab=2)

plot(model1_d4b, type="IIC", items = 0, xlab= "YETENEK", cex.main = 1, main = "TEST   BİLGİ   FONKSİYONU", ylab = "BİLGİ" , lwd= 2, col.main= "red", col="blue", font.axis= 3, font.lab=2)
```

Test bilgi fonksiyonlarının 0 yetenek düzeyinde en yüksek seviyede olduğu, -/+ 2 yetenek düzeylerinde sert bir şekilde düşmeye başladığı ve -/+ 4 yetenek düzeylerinde en düşük seviyesinde olduğu görülmektedir. Bu durumda her iki bileşenin de en çok 0 yetenek düzeyinde bilgi sağladığı ve -2 ile +2 aralığında yüksek düzeyde bilgi sağladığı söylenebilir. Ancak bu aralığın ötesinde sağlanan bilginin hızla azaldığı düşünülebilir. 

Çalışmanın bu aşamasında madde bilgi eğrileri de aşağıdaki kod satırları kullanılarak elde edilmiştir:

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
plot(model1_d4a, type="IIC",xlab= "YETENEK", cex.main = 1, ylab = "BİLGİ" , col.main= "red", font.axis= 3, font.lab=2, main = "1. BİLEŞEN MADDE BİLGİ  EĞRİLERİ")
plot(model1_d4b, type="IIC",xlab= "YETENEK", cex.main = 1, ylab = "BİLGİ" , col.main= "red", font.axis= 3, font.lab=2, main = "2. BİLEŞEN MADDE BİLGİ  EĞRİLERİ")
```

Bunlar incelendiğinde ise her iki bileşen için de maddelerin ölçülen özelliği geniş bir yetenek puanı ölçeğinde ölçtüğü görülmektedir. Birinci bileşen içerisinde en düşük bilgi sağlayan maddenin ikinci madde olduğu dikkat çekmektedir. Yine bilgi eğrisi en yüksek maddenin birinci bileşen için sekizinci madde olduğu da görülmektedir.  Bunlar, bir önceki bölümde kısmi problemli ve ideal dağılımlı olarak incelenen maddelerdir. Eğer ikinci bileşen için birer madde seçilecek olsaydı, o bileşene ait altı ve üç numaralı maddeler sırasıyla kısmi problemli ve ideal maddelere örnek olarak seçilebilirdi. 

### 1.e. Yetenek Puanları

Çok kategorili puanlanan maddelere yönelik olarak yürütülen analizlerin son aşamasında bireylere ait yetenek puanları hesaplanmış ve bunların dağılımı incelenmiştir. Analizlerin bu aşamasında şu kod satırları kullanılarak birinci ve ikinci bileşen için yetenek puanları ayrı ayrı hesaplanmıştır. 

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: true
#BİLEŞEN-1
score_d4a<- factor.scores(model1_d4a)
oruntu_d4a<- score_d4a[[1]]
oruntu_d4a$toplam<- rowSums((oruntu_d4a[,1:12]))
score_d4a<- factor.scores(model1_d4a)
oruntu_d4a<- score_d4a[[1]]
oruntu_d4a$toplam<- rowSums((oruntu_d4a[,1:12]))
theta_d4a <- numeric()
for (i in 1:419){ 
 for (j in 1:1000){
     	 if (sum (oruntu_d4a[i, 1: 12] == data4a[j, 1:12])==12)
          	  theta_d4a[j] <- oruntu_d4a[i, 15]      }}
data4a$theta<-theta_d4a
data4a$toplam<-rowSums(data4a[1:12])



#BİLEŞEN-2
score_d4b<- factor.scores(model1_d4b)
oruntu_d4b<- score_d4b[[1]]
oruntu_d4b$toplam<- rowSums((oruntu_d4b[,1:12]))
theta_d4b <- numeric()
for (i in 1:404){
  for (j in 1:1000){
      if (sum (oruntu_d4b[i, 1: 8] == data4b[j, 1:8])==8)
             theta_d4b[j] <- oruntu_d4b[i, 11] }}
data4b$theta<-theta_d4b
data4b$toplam<-rowSums(data4b[1:8])

```

Bunun ardından `describe()` fonksiyonu ile birey yetenek puanlarının betimsel istatikleri elde edilmiştir. Ayrıca `hist()` fonksiyonu ile histogram grafikleri oluşturulmuştur. Şu kod satırları kullanılmıştır. 

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: true
#BİLEŞEN-1
describe(data4a$theta)
hist(data4a$theta, xlab= "YETENEK", cex.main = 1, ylab = "FREKANS" , col.main= "red", font.axis= 3, font.lab=2, main = "1. BİLEŞEN BİREY YETENEK PUANLARI")
#BİLEŞEN-2
describe(data4b$theta)
hist(data4b$theta, xlab= "YETENEK", cex.main = 1, ylab = "FREKANS" , col.main= "red", font.axis= 3, font.lab=2, main = "2. BİLEŞEN BİREY YETENEK PUANLARI")

```

Her iki bileşene ait betimsel istatikler ve histogram grafikleri incelendiğinde, ortalamalarının sıfıra, standart sapmalarının da bire çok yakın olduğu görülmektedir. Bu durum her iki bileşenden elde edilen verinin de normal dağılım sergilediğini göstermektedir.

## **2. İki Kategorili Maddelere Yönelik Aşamalar**

Çalışmanın ikinci araştırma sorusu kapsamında, çok kategorili maddelerden oluşan veri setinin iki kategoriye dönüştürülmesi gerekmektedir. Çok kategorili puanlanan maddelerin iki kategorili olarak kodlanmasında izlenen adımlar şunlardır:

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
data5<- data4
for(i in 1:1000) {
   for(j in 1:20) {
if(data5[i,j] <= mean(data5[,j])) {data5[i,j] <- 0} 
else data5[i,j] <- 1
 }
}

```

### **2.a. Varsayımların Kontrolü ve Uygun MTK Modeli**

İki kategorili puanlanan maddelerden oluşan ölçeğin Madde Tepki Kuramı çerçevesinde incelenmesi sürecinde öncelikle uygun MTK modelinin belirlenebilmesi için varsayım kontrolleri yapılmıştır. Bu bağlamda, tek boyutluluk ve yerel bağımsızlık varsayımları ile model-veri uyumu kontrol edilmiştir. Tek boyutluluk varsayımı kontrolü için paralel analiz, yamaç birikinti grafiği ve faktör analizi kullanılmıştır. Bu amaçla, Psych paketinden (Revelle, 2020) faydalanılmıştır.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
fa.parallel(data5, main = "PARALEL ANALİZ SAÇILIM GRAFİĞİ", ylabel = "Temel Bileşenler ve Faktör Analizi Özdeğerleri")
```

Paralel analiz ve yamaç birikinti grafiği iki bileşenli bir yapıyı göstermektedir.  Bu nedenle hem iki hem de tek bileşenli modeller oluşturulmuştur. Aşağıda izlenen adımlar sonrası elde edilen modeller ait faktör yükleri görülebilir.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
model1 <- fa(data5, cor = "tet")
model2 <- fa(data5, cor = "tet", nfactors = 2)

```

Faktör yüklerinin her madde için her iki modelde de .60'nın üzerinde olduğu görülmektedir. Tek bileşenli yapının açıkladığı varyansın ise %61 olduğu anlaşılmaktadır. Bunun yanı sıra, iki bileşenli yapının birinci bileşenin %40, ikinci bileşenin %28 olmak üzere toplamda %68 oranında açıklanan varyansa sahip olduğu görülmektedir. Açıklanan varyans açısından modeller arasındaki farkın çok büyük olmadığı düşünüldüğünden, ileri analizlere tek bileşenli model ile devam edilmesine karar verilmiştir.  

Yerel bağımsızlık varsayımının kontrolü için Yen'in Q analizi (Yen, 1984)  uygulanmıştır. Bu süreçte sirt paketinden (Robitzsch, 2020) yararlanılmış ve aşağıdaki adımlar izlenmiştir. 

```{r}
#| warning: false
#| eval: false
#| echo: true
#| code-fold: true
model <- rasch.mml2(data5)
model.wle <-wle.rasch( dat=data5, b=model$item$b )
yenq3 <-Q3( dat=data5, theta=model.wle$theta, b=model$item$b)

```

Yerel bağımsızlık varsayımının karşılandığı görülmektedir. Bu nedenle model-veri uyumu incleme aşamasına geçilmiştir. Bu aşamada ltm paketinden (Rizopoulos, 2006) faydalanılmıştır. Aşağıdaki kod satırları kullanılarak elde edilen Benzerlik oranı tabloları görülebilir.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
model1 <- rasch(data5)
model2 <- ltm(data5 ~ z1)  
model3 <- tpm(data5)
anova(model1, model2)
anova(model1, model3)
anova(model2, model3)

```

Akaike ve Bayesian bilgi kriterleri incelendiğinde, üç model arasında ikinci modelin manidar farkla en uygun model olduğu görülmektedir. Bu nedenle, devam analizleri iki parametreli model ile yürütülmüştür.

### **2.b. Madde Parametreleri**

Model-veri uyumu sınandıktan ve en uygun model belirlendikten sonra, madde parametrelerinin incelenmesi aşamasına geçilmiştir. Model-2 üzerinden `coef()` fonksiyonu kullanılarak elde edilen madde parametreleri aşağıdadır.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
coef(model2)
```

Çıktılar incelendiğinde, güçlük parametresi en yüksek olan maddenin 13. madde olduğu göze çarpmaktadır. Yetenek düzeyi -.63'ten daha yüksek olan bireyler bu maddeyi %50'den daha yüksek bir ihtimalle doğru cevaplayacaklardır.

### **2.c.  Örnek Madde Karakteristik Eğrileri**

Çalışmanın bu aşamasında, iki kategorili puanlanan maddelerin analizinde madde karakteristik eğrisi ideal ve sorunlu olan birer madde incelenmiş ve yorumlanmıştır. Bu nedenle, öncelikle birinci bileşeni oluşturan tüm maddelerin madde bilgi eğrileri `plot()` fonksiyonu ile oluşturulmuş, aşağıdaki kod satırları kullanılmıştır:

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
plot(model2, type="IIC",xlab= "YETENEK", cex.main = 1, ylab = "BİLGİ" , col.main= "red", font.axis= 3, font.lab=2, main = "MADDE BİLGİ  EĞRİLERİ")
```

Madde bilgi eğrileri incelendiğinde, en çok bilgiyi dördüncü maddenin sağladığı görülmektedir. En düşük bilgi sağlayan maddelerden birisinin ise 12. madde olduğu görülmektedir. Bu nedenle madde karakteristik eğrilerinin incelenmesi sürecinde örnek olarak bu iki madde tercih edilmiştir. Bu maddelere ait karakteristik eğrileri aşağıdaki kod satırları ile elde edilmiştir.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
plot(model2, type="ICC", items = c(4,12), labels = c("madde-4", "madde-12"), legend = T, xlab= "YETENEK", cex.main = 1, main = "MADDE KARAKTERİSTİK EĞRİSİ", ylab = "OLASILIK" , lwd= 2)
points(-.81, .5, lwd= 3, pch= 3)
text(-.81, .5, lwd= 2, labels = "b par.: -0.81", pos = 4)
points(-.85, .5, lwd= 3, col= "red", pch=5)
text(-.85, .5, lwd= 3, labels = "b par.: -0.85", pos = 2, col= "red")

```

Dört ve 12 numaralı maddelerin güçlük parametreleri birbirlerine oldukça yakındır. Ancak dördüncü madde diğerine göre daha dik bir karakteristik eğrisine sahiptir. Bu durum iki maddenin ayırt edicilik parametrelerindeki farklılıktan kaynaklanmaktadır. Dördüncü madde yüksek bir ayırt edicilik parametresi ile ideal bir madde gibi görünürken, 12. madde düşük bir ayırt edicilik parametresi ile kısmi problemli bir madde görüntüsü sergilemektedir. Yine de 12 numaralı maddenin parametre değerlerinin kabul edilebilir olduğu da vurgulanmalıdır. 

### **2.d. Test Bilgi Fonksiyonu**

İki kategorili puanlanan maddelere yönelik test bilgi fonksiyonunu elde etmek için aşağıdaki kod satırları kullanılmıştır. `locator()` fonksiyonu aracılığı ile test bilgi fonksiyonunun tepe noktası tespit edilmiş ve ardından `abline()` fonksiyonu ile tepe noktasının koordinat çizgileri grafiğe eklenmiştir.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
plot(model2, type="IIC", items = 0, xlab= "YETENEK", cex.main = 1, main = "TEST   BİLGİ   FONKSİYONU", ylab = "BİLGİ" , lwd= 2,col.main="red",col="blue", font.axis= 3, font.lab=2)
axis(2, at = seq(0, 30, by =5))
axis(1, at = seq(-4, 4, by = .1))
abline(h=27.74, v=-.8451, lty=4)

```

Test bilgi fonksiyonunun -0.84 yetenek düzeyinde en yüksek seviyede olduğu, -1.5 ile 0 yetenek düzeylerinde sert bir şekilde düşmeye başladığı ve -2.8 ve 1.1 yetenek düzeylerinde en düşük seviyesinde olduğu görülmektedir. Bu durumda en yüksek bilginin bu ölçekte -.8 yetenek düzeylerinde sağlandığı söylenebilir. 

Bu durumda her iki bileşenin de en çok 0 yetenek düzeyinde bilgi sağladığı ve -2 ile +2 aralığında yüksek düzeyde bilgi sağladığı söylenebilir. Ancak bu aralığın ötesinde sağlanan bilginin hızla azaldığı düşünülebilir.

### **2.e. Yetenek Puanları**

İki kategorili puanlanan maddelere yönelik olarak yürütülen analizlerin son aşamasında bireylere ait yetenek puanları hesaplanmış ve bunların dağılımı incelenmiştir. Şu kod satırları ile hesaplanan yetenek puanları veri setine eklenmiştir.

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
score_d5<- factor.scores.ltm(model2)
oruntu_d5 <- score_d5[[1]]
oruntu_d5$toplam <- rowSums((oruntu_d5[,1:12]))
theta_d5 <- numeric()
for (i in 1:454){
     for (j in 1:1000){
         if (sum (oruntu_d5[i, 1: 20] == data5[j, 1:20])==20)
             theta_d5[j] <- oruntu_d5[i, 23] }}
data5$theta<-theta_d5
data5$toplam<-rowSums(data5[1:20])

```

Bunun ardından `describe()` fonksiyonu ile birey yetenek puanlarının betimsel istatikleri elde edilmiştir. Ayrıca hist() fonksiyonu ile histogram grafikleri oluşturulmuştur. Bu süreçlerde kullanılan kod satırları şunlardır:

```{r}
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
#BİLEŞEN-1
describe(data5$theta)
hist(data5$theta, xlab= "YETENEK", cex.main = 1, ylab = "FREKANS" , col.main= "red", font.axis= 3, font.lab=2, main = "BİREY YETENEK PUANLARI")

```

İncelenen iki kategorili puanlanan veriye ait betimsel istatikleri incelendiğinde, ortalamanın -.03, standart sapmanın da .81 olduğu görülmektedir. Bu durum verinin normal dağıldığı şeklinde yorumlanabilir, ancak histogram grafiği incelendiğinde yetenek puanlarının -2 ile 1 arasında dağılım gösterdiği ve 1 yetenek puanında bir yığılma olduğu görülmektedir. Bu durum, verilerin çok kategorili puanlanan maddelerden ortalamaları doğrultusunda iki kategorili puanlanan maddelere çevrilmesiyle ilişkisi olduğu düşünülmektedir.

## SONUÇ

Bu çalışma simüle edilmiş veri ile yürütülmüştür. Çıktılarında bu nedenle temel problemler görülebilmektedir. Yine de aşama aşama MTK ile madde analizinin R ile nasıl yapılacağına dair bana güzel bir referans olmaktadır. Bu çalışma, bir ders raporu olarak hazırlanmıştır.
