labs(title = "Persons") +
coord_flip()
f2 <- mod$xsi.facets %>%
filter(str_starts(parameter, "rater")) %>%
ggplot(aes(x = xsi)) +
# geom_point(aes(y = 0)) +  # dots instead of labels
geom_text(aes(y = 0, label = parameter), nudge_y = 0.05, size = 2) +  # Add values with a slight vertical adjustment
theme_bw() +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks = seq(-6, 6, .6), limits = c(-6, 6), position = "top") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank()) +
labs(title = "Raters") +
coord_flip()
f3 <- mod$xsi.facets %>%
filter(parameter %in% domain_params) %>%
ggplot(aes(x = xsi)) +
#geom_point(aes(y = 0)) +  # dots instead of labels
geom_text(aes(y = 0, label = parameter), nudge_y = 0.05, size = 2) +
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-2, 2, .2), limits=c(-2, 2),
position =  "top") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x= element_blank())+
labs(title = "Domain") +
coord_flip()
f4 <- mod$xsi.facets %>%
filter(parameter %in% domain_params) %>%
ggplot(aes(x = xsi)) +
geom_vline(xintercept = mod$xsi.facets$xsi[1:4]) +
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-2, 2, .1), limits=c(-2, 2),
position =  "top") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x= element_blank())+
labs(title = "Scale") +
coord_flip()
plot_grid(f1, f2, f3, f4, nrow = 1, rel_widths = c(0.7, .10, .10, .10))
#| warning: false
#| eval: true
#| echo: true
#| code-fold: true
facet_params<-mod[["xsi.facets"]][["parameter"]]
domain_params<-facet_params[1:4]
f1 <- ggplot(data = persons.mod, aes(x = theta))+
# geom_text(aes(y = persons.mod$pid, label = persons.mod$pid), nudge_y = 0.05, size = 1.5) +
geom_dotplot(binwidth = .1, stackdir = "down") + # dots instead of labels
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-6, 6, .6), limits=c(-6, 6),
position =  "top") +
theme(axis.title.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
labs(title = "Persons") +
coord_flip()
f2 <- mod$xsi.facets %>%
filter(str_starts(parameter, "rater")) %>%
ggplot(aes(x = xsi)) +
# geom_point(aes(y = 0)) +  # dots instead of labels
geom_text(aes(y = 0, label = parameter), nudge_y = 0.05, size = 2) +  # Add values with a slight vertical adjustment
theme_bw() +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks = seq(-6, 6, .6), limits = c(-6, 6), position = "top") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank()) +
labs(title = "Raters") +
coord_flip()
f3 <- mod$xsi.facets %>%
filter(parameter %in% domain_params) %>%
ggplot(aes(x = xsi)) +
#geom_point(aes(y = 0)) +  # dots instead of labels
geom_text(aes(y = 0, label = parameter), nudge_y = 0.05, size = 2) +
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-2, 2, .2), limits=c(-2, 2),
position =  "top") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x= element_blank())+
labs(title = "Domain") +
coord_flip()
f4 <- mod$xsi.facets %>%
filter(parameter %in% domain_params) %>%
ggplot(aes(x = xsi)) +
geom_vline(xintercept = mod$xsi.facets$xsi[1:4]) +
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-2, 2, .1), limits=c(-2, 2),
position =  "top") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x= element_blank())+
labs(title = "Scale") +
coord_flip()
plot_grid(f1, f2, f3, f4, nrow = 1, rel_widths = c(0.7, .10, .10, .10))
#| warning: false
#| eval: true
#| echo: true
#| code-fold: true
facet_params<-mod[["xsi.facets"]][["parameter"]]
domain_params<-facet_params[1:4]
f1 <- ggplot(data = persons.mod, aes(x = theta))+
# geom_text(aes(y = persons.mod$pid, label = persons.mod$pid), nudge_y = 0.05, size = 1.5) +
geom_dotplot(binwidth = .1, stackdir = "down") + # dots instead of labels
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-6, 6, .6), limits=c(-6, 6),
position =  "top") +
theme(axis.title.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
labs(title = "Persons") +
coord_flip()
f2 <- mod$xsi.facets %>%
filter(str_starts(parameter, "rater")) %>%
ggplot(aes(x = xsi)) +
# geom_point(aes(y = 0)) +  # dots instead of labels
geom_text(aes(y = 0, label = parameter), nudge_y = 0.05, size = 2) +  # Add values with a slight vertical adjustment
theme_bw() +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks = seq(-6, 6, .6), limits = c(-6, 6), position = "top") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank()) +
labs(title = "Raters") +
coord_flip()
f3 <- mod$xsi.facets %>%
filter(parameter %in% domain_params) %>%
ggplot(aes(x = xsi)) +
#geom_point(aes(y = 0)) +  # dots instead of labels
geom_text(aes(y = 0, label = parameter), nudge_y = 0.05, size = 2) +
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-2, 2, .2), limits=c(-2, 2),
position =  "top") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x= element_blank())+
labs(title = "Domain") +
coord_flip()
f4 <- mod$xsi.facets %>%
filter(parameter %in% domain_params) %>%
ggplot(aes(x = xsi)) +
geom_vline(xintercept = mod$xsi.facets$xsi[1:4]) +
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-2, 2, .1), limits=c(-2, 2),
position =  "top") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x= element_blank())+
labs(title = "Scale") +
coord_flip()
plot_grid(f1, f2, f3, f4, nrow = 1, rel_widths = c(0.7, .15, .15, .15))
#| warning: false
#| eval: true
#| echo: true
#| code-fold: true
facet_params<-mod[["xsi.facets"]][["parameter"]]
domain_params<-facet_params[1:4]
f1 <- ggplot(data = persons.mod, aes(x = theta))+
# geom_text(aes(y = persons.mod$pid, label = persons.mod$pid), nudge_y = 0.05, size = 1.5) +
geom_dotplot(binwidth = .1, stackdir = "down") + # dots instead of labels
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-6, 6, .6), limits=c(-6, 6),
position =  "top") +
theme(axis.title.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
labs(title = "Persons") +
coord_flip()
f2 <- mod$xsi.facets %>%
filter(str_starts(parameter, "rater")) %>%
ggplot(aes(x = xsi)) +
# geom_point(aes(y = 0)) +  # dots instead of labels
geom_text(aes(y = 0, label = parameter), nudge_y = 0.05, size = 3) +  # Add values with a slight vertical adjustment
theme_bw() +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks = seq(-6, 6, .6), limits = c(-6, 6), position = "top") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank()) +
labs(title = "Raters") +
coord_flip()
f3 <- mod$xsi.facets %>%
filter(parameter %in% domain_params) %>%
ggplot(aes(x = xsi)) +
#geom_point(aes(y = 0)) +  # dots instead of labels
geom_text(aes(y = 0, label = parameter), nudge_y = 0.05, size = 3) +
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-2, 2, .2), limits=c(-2, 2),
position =  "top") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x= element_blank())+
labs(title = "Domain") +
coord_flip()
f4 <- mod$xsi.facets %>%
filter(parameter %in% domain_params) %>%
ggplot(aes(x = xsi)) +
geom_vline(xintercept = mod$xsi.facets$xsi[1:4]) +
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-2, 2, .1), limits=c(-2, 2),
position =  "top") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x= element_blank())+
labs(title = "Scale") +
coord_flip()
plot_grid(f1, f2, f3, f4, nrow = 1, rel_widths = c(0.7, .15, .15, .15))
#| warning: false
#| eval: true
#| echo: true
#| code-fold: true
# plot(mod, type="items")
# person parameters
persons.mod <- TAM::tam.wle(mod)
theta <- persons.mod$theta
# thresholds
thr <- TAM::tam.threshold(mod)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: true
facet_params<-mod[["xsi.facets"]][["parameter"]]
domain_params<-facet_params[1:4]
f1 <- ggplot(data = persons.mod, aes(x = theta))+
# geom_text(aes(y = persons.mod$pid, label = persons.mod$pid), nudge_y = 0.05, size = 1.5) +
geom_dotplot(binwidth = .1, stackdir = "down") + # dots instead of labels
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-6, 6, .6), limits=c(-6, 6),
position =  "top") +
theme(axis.title.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
labs(title = "Persons") +
coord_flip()
f2 <- mod$xsi.facets %>%
filter(str_starts(parameter, "rater")) %>%
ggplot(aes(x = xsi)) +
# geom_point(aes(y = 0)) +  # dots instead of labels
geom_text(aes(y = 0, label = parameter), nudge_y = 0.05, size = 3) +  # Add values with a slight vertical adjustment
theme_bw() +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks = seq(-6, 6, .6), limits = c(-6, 6), position = "top") +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank()) +
labs(title = "Raters") +
coord_flip()
f3 <- mod$xsi.facets %>%
filter(parameter %in% domain_params) %>%
ggplot(aes(x = xsi)) +
#geom_point(aes(y = 0)) +  # dots instead of labels
geom_text(aes(y = 0, label = parameter), nudge_y = 0.05, size = 3) +
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-2, 2, .2), limits=c(-2, 2),
position =  "top") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x= element_blank())+
labs(title = "Domain") +
coord_flip()
f4 <- mod$xsi.facets %>%
filter(parameter %in% domain_params) %>%
ggplot(aes(x = xsi)) +
geom_vline(xintercept = mod$xsi.facets$xsi[1:4]) +
theme_bw()  +
scale_y_continuous(name = "", breaks = NULL) +
scale_x_continuous(breaks=seq(-2, 2, .1), limits=c(-2, 2),
position =  "top") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x= element_blank())+
labs(title = "Scale") +
coord_flip()
plot_grid(f1, f2, f3, f4, nrow = 1, rel_widths = c(0.7, .15, .15, .15))
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
facets <- data[, "rater", drop=FALSE]  # define facet (rater)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
# Load the libraries
library(readr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(TAM)
library(cowplot)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
data <- read_csv("MFRM_data.csv", show_col_types = FALSE)
head(data)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
str(data)
summary(data)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
facets <- data[, "rater", drop=FALSE]  # define facet (rater)
pid <- data$essayId  # define person identifier
resp <- data[, -c(5:6)]  # item response data
formulaA <- ~item*step + rater   # formula for PCM
mod <- TAM::tam.mml.mfr(resp=resp, facets=facets, formulaA=formulaA, pid=data$essayId)
fit_stats <- TAM::tam.fit(mod)
print(fit_stats)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
# Load the libraries
library(readr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(TAM)
library(cowplot)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
data <- read_csv("MFRM_data.csv", show_col_types = FALSE)
head(data)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
str(data)
summary(data)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
facets <- data[, "rater", drop=FALSE]  # define facet (rater)
pid <- data$essayId  # define person identifier
resp <- data[, -c(5:6)]  # item response data
formulaA <- ~item*step + rater   # formula for PCM
mod <- TAM::tam.mml.mfr(resp=resp, facets=facets, formulaA=formulaA, pid=data$essayId)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
fit_stats <- TAM::tam.fit(mod)
print(fit_stats)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
reliability <- mod$EAP.rel
print(reliability)
person_fit <- TAM::tam.personfit(mod)
print(person_fit)
residuals <- TAM::tam.residuals(mod)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
reliability <- mod$EAP.rel
print(reliability)
person_fit <- TAM::tam.personfit(mod)
print(person_fit)
# person parameters
persons.mod <- TAM::tam.wle(mod)
theta <- persons.mod$theta
# thresholds
thr <- TAM::tam.threshold(mod)
thr
print(person_fit)
print(reliability)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
reliability <- mod$EAP.rel
print(reliability)
# person parameters
persons.mod <- TAM::tam.wle(mod)
theta <- persons.mod$theta
# thresholds
thr <- TAM::tam.threshold(mod)
thr
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
reliability <- mod$EAP.rel
print(reliability)
# person parameters
persons.mod <- TAM::tam.wle(mod)
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
theta <- persons.mod$theta
# thresholds
thr <- TAM::tam.threshold(mod)
thr
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
reliability <- mod$EAP.rel
print(reliability)
# person parameters
persons.mod <- TAM::tam.wle(mod)
# Plot person ability estimates (theta)
ggplot(data.frame(theta = persons.mod$theta), aes(x = theta)) +
geom_histogram(binwidth = 0.2, fill = "steelblue", color = "black") +
labs(title = "Distribution of Person Ability Estimates", x = "Ability (Theta)", y = "Frequency")
#| warning: false
#| eval: true
#| echo: true
#| code-fold: false
# Plot person ability estimates (theta)
ggplot(data.frame(theta = persons.mod$theta), aes(x = theta)) +
geom_histogram(binwidth = 0.2, fill = "steelblue", color = "black") +
labs(title = "Distribution of Person Ability Estimates", x = "Ability (Theta)", y = "Frequency")
#| warning: false
#| eval: true
#| echo: false
#| code-fold: false
facets <- data[, "rater", drop=FALSE]  # define facet (rater)
pid <- data$essayId  # define person identifier
resp <- data[, -c(5:6)]  # item response data
formulaA <- ~item*step + rater   # formula for PCM
mod <- TAM::tam.mml.mfr(resp=resp, facets=facets, formulaA=formulaA, pid=data$essayId)
#| warning: false
#| eval: false
#| echo: TRUE
#| code-fold: false
facets <- data[, "rater", drop=FALSE]  # define facet (rater)
pid <- data$essayId  # define person identifier
resp <- data[, -c(5:6)]  # item response data
formulaA <- ~item*step + rater   # formula for PCM
mod <- TAM::tam.mml.mfr(resp=resp, facets=facets, formulaA=formulaA, pid=data$essayId)
#| warning: false
#| eval: true
#| echo: FALSE
#| code-fold: false
facets <- data[, "rater", drop=FALSE]  # define facet (rater)
pid <- data$essayId  # define person identifier
resp <- data[, -c(5:6)]  # item response data
formulaA <- ~item*step + rater   # formula for PCM
mod <- TAM::tam.mml.mfr(resp=resp, facets=facets, formulaA=formulaA, pid=data$essayId)
#| warning: false
#| eval: true
#| echo: TRUE
#| code-fold: false
facets <- data[, "rater", drop=FALSE]  # define facet (rater)
pid <- data$essayId  # define person identifier
resp <- data[, -c(5:6)]  # item response data
formulaA <- ~item*step + rater   # formula for PCM
mod <- TAM::tam.mml.mfr(resp=resp, facets=facets, formulaA=formulaA, pid=data$essayId)
library(dplyr)
data <- read.delim("data.csv")
df_with_demographics <- data %>%
filter(engnat == 1) %>%
filter(hand == 1) %>%
filter(age >= 18 & age <= 30) %>%
filter(source == 1)
df <- df_with_demographics %>% select(1:44)
library(dplyr)
data <- read.delim("data.csv")
df_with_demographics <- data %>%
filter(engnat == 1) %>%
filter(hand == 1) %>%
filter(age >= 18 & age <= 30) %>%
filter(source == 1)
df <- df_with_demographics %>% select(1:44)
